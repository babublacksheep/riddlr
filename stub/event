event
-----

This document describes what an event looks like.
An event's metadata should be defined as a JSON document.


    event: [#]
        * name:     The name of the event. [~]
        * start:    The event's start time (when it goes live).
                    Should be defined as a UTC timestamp
                    (if not applicable, use `null`). [!]
        * end:      The event's end time (if not applicable, use `null`). [!]
        * levels:   A list of `level` objects. [%]

    level: [%]
        * index:    The level number; routing follows the same order. [!]
        * title:    The title text to be displayed on the level. [~]
        * text:     The textual content (actual question) for the level. [~]
        * media:    If there's any (if there isn't any, use `null`). [#]
                        - type: Must be a valid HTML media tag;
                                ideally: img, video. [~]
                        - url:  The URL to fetch from, local references (URI)
                                will not be supported. [~]
        * answer:   The answer to a level.
                        - choices: An accepted set of answers. [^]
                        - case:     Flag for case-sensitivity. [-]
                        - hints:    Display a text based hint. [%]
                        - source:   A hint to display in the source page,
                                    usually embedded inside an HTML comment. [~]
                        - path:     The URI path to display
                                    (used for redirections). [~]

    legend:
        [~]: string
        [!]: integer
        [^]: list
        [%]: list of mappings
        [-]: boolean
        [#]: mapping


    example:
                {
                    "name": "foo",
                    "start": XXXXXXXXXX,
                    "end": null,
                    "levels": [
                        {
                            "index": N,
                            "title": "bar",
                            "text": "baz",
                            "media": {
                                "type": "qux",
                                "url": ""
                            },
                            "answer": {
                                "choices": ["corge", "grault"]
                                "case": true,
                                "hints": [
                                    {
                                        "hint": "garply",
                                        "text": "grault"
                                    }
                                ]
                            },
                            "source": "fred",
                            "path": "/plugh/xyzzy/..."
                        }
                    ]
                }
